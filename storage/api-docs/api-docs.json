{
    "openapi": "3.0.0",
    "info": {
        "title": "APIs For Edelways project",
        "version": "1.0.0"
    },
    "paths": {
        "/api/create-account": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "description": "Returns user data",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Login user",
                "description": "Returns user tocken",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserToken"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/sign-out": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Logout user",
                "description": "Returns success message",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/complete-task": {
            "post": {
                "tags": [
                    "Completes"
                ],
                "summary": "Complete the task",
                "description": "Returns task data",
                "operationId": "completeTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompleteTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskComplete"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/completes": {
            "get": {
                "tags": [
                    "Completes"
                ],
                "summary": "Get completes list",
                "description": "Returns completes list",
                "operationId": "getTasksCompletes",
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "query",
                        "description": "Id of related task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskComplete"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/complete": {
            "get": {
                "tags": [
                    "Completes"
                ],
                "summary": "Get complete information",
                "description": "Returns complete data",
                "operationId": "getCompleteData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Complete id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskComplete"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/create-group": {
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Create new group",
                "description": "Returns group data",
                "operationId": "createGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/groups": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Get group information",
                "description": "Returns groups data",
                "operationId": "getGroupsData",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter all or my groups",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/join-group": {
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Join to group",
                "description": "Returns success or not",
                "operationId": "joinGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JoinGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Group not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/delete-group": {
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Delete group",
                "description": "Returns success",
                "operationId": "deleteGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Group not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/left-group": {
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Left group",
                "description": "Returns success",
                "operationId": "leftGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Group not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/group": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Get group information",
                "description": "Returns group data",
                "operationId": "getGroupData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Group id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/delete-user": {
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Delete user from the group",
                "description": "Returns success",
                "operationId": "deleteUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "User not found in that group"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get tasks list",
                "description": "Returns tasks list",
                "operationId": "getTasksData",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Id of related group",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/create-task": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create new task",
                "description": "Returns task data",
                "operationId": "createTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/task": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task information",
                "description": "Returns task data",
                "operationId": "getTaskData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Task id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/delete-task": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task",
                "description": "Returns success",
                "operationId": "deleteTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/review-task": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Review the task",
                "description": "Returns task data",
                "operationId": "reviewTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskReview"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/create-theory": {
            "post": {
                "tags": [
                    "Theories"
                ],
                "summary": "Create new theory",
                "description": "Returns theory data",
                "operationId": "createTheory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTheoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theory"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/theories": {
            "get": {
                "tags": [
                    "Theories"
                ],
                "summary": "Get theories list",
                "description": "Returns theories list",
                "operationId": "getTheoriesData",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Id of related group",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/theory": {
            "get": {
                "tags": [
                    "Theories"
                ],
                "summary": "Get theory information",
                "description": "Returns theory data",
                "operationId": "getTheoryData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Theory id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Theory not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/delete-theory": {
            "post": {
                "tags": [
                    "Theories"
                ],
                "summary": "Delete theory",
                "description": "Returns success",
                "operationId": "deleteTheory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Theory not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CompleteTaskRequest": {
                "title": "Complete Task request",
                "description": "Complete Task request body data",
                "required": [
                    "task_id",
                    "document_path"
                ],
                "properties": {
                    "document_path": {
                        "title": "Document path",
                        "description": "Path of document which contain the work",
                        "type": "string",
                        "example": "/documents/completes/doc1.dox"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Id of task",
                        "type": "integer",
                        "example": "14"
                    }
                },
                "type": "object"
            },
            "CreateGroupRequest": {
                "title": "Create group request",
                "description": "Create group request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new group",
                        "type": "string",
                        "example": "Java"
                    }
                },
                "type": "object"
            },
            "CreateTaskRequest": {
                "title": "Create Task request",
                "description": "Create Task request body data",
                "required": [
                    "name",
                    "user_id",
                    "group_id",
                    "description"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new Task",
                        "type": "string",
                        "example": "Java exam"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the new Task",
                        "type": "string",
                        "example": "Pass the exam"
                    },
                    "group_id": {
                        "title": "Group ID",
                        "description": "Id of group",
                        "type": "integer",
                        "example": "12"
                    },
                    "document_path": {
                        "title": "Document path",
                        "description": "Path of document on the server",
                        "type": "string",
                        "example": "/theory/file.docx"
                    },
                    "mark": {
                        "title": "Mark",
                        "description": "Max mark",
                        "type": "integer",
                        "format": "int64",
                        "example": 12
                    }
                },
                "type": "object"
            },
            "CreateTheoryRequest": {
                "title": "Create theory request",
                "description": "Create theory request body data",
                "required": [
                    "name",
                    "user_id",
                    "group_id",
                    "document_path"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new group",
                        "type": "string",
                        "example": "Java"
                    },
                    "group_id": {
                        "title": "Group ID",
                        "description": "Id of group",
                        "type": "integer",
                        "example": "12"
                    },
                    "document_path": {
                        "title": "Document path",
                        "description": "Path of document on the server",
                        "type": "string",
                        "example": "/theory/file.docx"
                    }
                },
                "type": "object"
            },
            "CreateUserRequest": {
                "title": "Create user request",
                "description": "Create user request body data",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation",
                    "image"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new user",
                        "type": "string",
                        "example": "Roman Gurniy"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the new user",
                        "type": "string",
                        "example": "roman@gmail.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the new user",
                        "type": "string",
                        "example": "secret123A"
                    },
                    "password_confirmation": {
                        "title": "Password confirm",
                        "description": "Password confirmation",
                        "type": "string",
                        "example": "secret123A"
                    },
                    "image": {
                        "title": "Image",
                        "description": "Path to image on the server",
                        "type": "string",
                        "example": "/images/uploads/customer/6244ca3e9c790_logo-nike-1971.png"
                    }
                },
                "type": "object"
            },
            "DeleteGroupRequest": {
                "title": "Delete request",
                "description": "Delete group request body data",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Id of the group",
                        "type": "integer",
                        "example": "3"
                    }
                },
                "type": "object"
            },
            "DeleteUserRequest": {
                "title": "Delete request",
                "description": "Delete user from group request body data",
                "required": [
                    "user_id",
                    "group_id"
                ],
                "properties": {
                    "group_id": {
                        "title": "Group id",
                        "description": "Id of the group",
                        "type": "integer",
                        "example": "3"
                    },
                    "user_id": {
                        "title": "User id",
                        "description": "Id of the user",
                        "type": "integer",
                        "example": "4"
                    }
                },
                "type": "object"
            },
            "JoinGroupRequest": {
                "title": "Join group request",
                "description": "Join group request",
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "title": "Code",
                        "description": "Code of the group",
                        "type": "string",
                        "example": "NJHGYTD"
                    }
                },
                "type": "object"
            },
            "LoginUserRequest": {
                "title": "Login user request",
                "description": "Login user request body data",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "roman@gmail.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "secret123A"
                    }
                },
                "type": "object"
            },
            "Group": {
                "title": "Group",
                "description": "Group",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new group",
                        "type": "string",
                        "example": "Java"
                    },
                    "code": {
                        "title": "Code",
                        "description": "Random code to connect to group",
                        "type": "string",
                        "example": "GHDFDBU"
                    },
                    "user_id": {
                        "title": "User id",
                        "description": "Id of user who created this group",
                        "type": "string",
                        "example": "23"
                    },
                    "users": {
                        "title": "Users",
                        "description": "Count of joined uses",
                        "type": "integer",
                        "example": "12"
                    },
                    "author": {
                        "title": "Author",
                        "description": "Name of author",
                        "type": "string",
                        "example": "Roman Gurniy"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Group"
                }
            },
            "Task": {
                "title": "Task",
                "description": "Task",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new Task",
                        "type": "string",
                        "example": "Java exam"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the new Task",
                        "type": "string",
                        "example": "Pass the exam"
                    },
                    "user_id": {
                        "title": "User id",
                        "description": "Id of user who created this Task",
                        "type": "string",
                        "example": "23"
                    },
                    "group_id": {
                        "title": "Group ID",
                        "description": "Id of group",
                        "type": "integer",
                        "example": "12"
                    },
                    "document_path": {
                        "title": "Document path",
                        "description": "Path of document on the server",
                        "type": "string",
                        "example": "/theory/file.docx"
                    },
                    "author": {
                        "title": "Author",
                        "description": "Author of Task",
                        "type": "string",
                        "example": "Roman Gurniy"
                    },
                    "date": {
                        "title": "Date",
                        "description": "Date of created the Task",
                        "type": "string",
                        "example": "March 10, 2022"
                    },
                    "isAdmin": {
                        "title": "IsAdmin",
                        "description": "Returns true is user is admin of this Task",
                        "type": "string",
                        "example": "true"
                    },
                    "mark": {
                        "title": "Mark",
                        "description": "Max mark",
                        "type": "integer",
                        "format": "int64",
                        "example": 12
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Task"
                }
            },
            "TaskComplete": {
                "title": "Task Completes",
                "description": "Task Completes",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "document_path": {
                        "title": "Document path",
                        "description": "Path of document which contain the work",
                        "type": "string",
                        "example": "/documents/completes/doc1.dox"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Id of task",
                        "type": "integer",
                        "example": "14"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Task Completes"
                }
            },
            "TaskReview": {
                "title": "Task Review",
                "description": "Task Reviews",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "complete_id": {
                        "title": "Complete ID",
                        "description": "Id of Complete task",
                        "type": "integer",
                        "example": "14"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "Id of user",
                        "type": "integer",
                        "example": "14"
                    },
                    "mark": {
                        "title": "Mark",
                        "description": "Mark of Complete task",
                        "type": "integer",
                        "example": "6"
                    },
                    "comment": {
                        "title": "Comment",
                        "description": "Comment for task",
                        "type": "string",
                        "example": "Great work!"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Task Reviews"
                }
            },
            "Theory": {
                "title": "Theory",
                "description": "Theory",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new group",
                        "type": "string",
                        "example": "Java"
                    },
                    "user_id": {
                        "title": "User id",
                        "description": "Id of user who created this group",
                        "type": "string",
                        "example": "23"
                    },
                    "group_id": {
                        "title": "Group ID",
                        "description": "Id of group",
                        "type": "integer",
                        "example": "12"
                    },
                    "document_path": {
                        "title": "Document path",
                        "description": "Path of document on the server",
                        "type": "string",
                        "example": "/theory/file.docx"
                    },
                    "author": {
                        "title": "Author",
                        "description": "Author of theory",
                        "type": "string",
                        "example": "Roman Gurniy"
                    },
                    "date": {
                        "title": "Date",
                        "description": "Date of created the theoury",
                        "type": "string",
                        "example": "March 10, 2022"
                    },
                    "isAdmin": {
                        "title": "IsAdmin",
                        "description": "Returns true is user is admin of this group",
                        "type": "string",
                        "example": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Theory"
                }
            },
            "User": {
                "title": "User",
                "description": "User",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new user",
                        "type": "string",
                        "example": "Roman Gurniy"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the new user",
                        "type": "string",
                        "example": "roman@gmail.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the new user",
                        "type": "string",
                        "example": "secret123A"
                    },
                    "image": {
                        "title": "Image",
                        "description": "Path to image on the server",
                        "type": "string",
                        "example": "/images/uploads/customer/6244ca3e9c790_logo-nike-1971.png"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "UserToken": {
                "title": "User Token",
                "description": "User token for auth",
                "properties": {
                    "token": {
                        "title": "Token",
                        "description": "Token for auth",
                        "type": "string",
                        "example": "5|tUA9GsFtBSNjZFq3rxYXb3BAk9A44NmBha7rl7iB"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Token"
                }
            },
            "ReviewTaskRequest": {
                "title": "Review Task request",
                "description": "Review Task request body data",
                "required": [
                    "complete_id",
                    "comment",
                    "mark"
                ],
                "properties": {
                    "complete_id": {
                        "title": "Complete ID",
                        "description": "Id of Complete task",
                        "type": "integer",
                        "example": "14"
                    },
                    "mark": {
                        "title": "Mark",
                        "description": "Mark of Complete task",
                        "type": "integer",
                        "example": "6"
                    },
                    "comment": {
                        "title": "Comment",
                        "description": "Comment for task",
                        "type": "string",
                        "example": "Great work!"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}